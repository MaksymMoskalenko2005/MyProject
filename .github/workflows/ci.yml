name: CI Pipeline

on: 
  pull_request: 
    types: [opened, edited, reopened, synchronize, review_requested, submitted]
    branches: 
      - develop

jobs: 
  build: 
    runs-on: windows-latest 
    steps: 
      - name: Checkout repository 
        uses: actions/checkout@v3 

      - name: Set up Python 
        uses: actions/setup-python@v4 
        with: 
          python-version: '3.13' 

      - name: Install dependencies 
        run: | 
          pip install -r requirements.txt 

      # - name: Run tests
      #   run: pytest --junitxml=report.xml

  analysis:
    runs-on: windows-latest  # Windows-образ для Cloc, SonarQube, Flake8, Black
    needs: build
    steps: 
      - name: Checkout repository 
        uses: actions/checkout@v3

      # Закоментований крок для перевірки наявності схваленого код-рев’ю
      # - name: Перевірка наявності схваленого код-рев’ю
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       const prNumber = context.payload.pull_request.number;
      #       const { data: reviews } = await github.rest.pulls.listReviews({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         pull_number: prNumber
      #       });
      #       
      #       const approved = reviews.some(review => review.state === 'APPROVED');
      #       if (!approved) {
      #         core.setFailed("Код-рев’ю не схвалено");
      #       }

      - name: Install Cloc with Chocolatey
        run: |
          choco install cloc -y

      - name: Count lines of code with Cloc
        run: |
          cloc src\ > cloc-report.txt
          type cloc-report.txt

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner

      - name: Запуск flake8 через Reviewdog
        uses: reviewdog/action-flake8@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          level: error

      - name: Запуск Black через Reviewdog
        uses: reviewdog/action-black@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          level: info
